name: Hyperflx-Dev-Deployment

on:
  push:
    branches:
      - develop
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  ACR_NAME: codework
  REGISTRY_NAME: codework
  REGISTRY_URL: codework.azurecr.io
  REPOSITORY_NAME: dev/hyperflx/hyperflx-api
  RESOURCE_GROUP_NAME: hyperflx-dev-rg
  CONTAINER_APP_NAME: hyperflx-dev-api
  VERSION: v1.0.0
  ENVIRONMENT: DEV

jobs:
  build:
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    runs-on: ubuntu-latest

    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}

    steps:
      - uses: actions/checkout@v4

      - name: Set IMAGE_TAG
        id: set-tag
        run: |
          BUILD_NUMBER="${{ github.run_number }}-${{ github.ref_name }}"
          IMAGE_TAG="${{ env.REGISTRY_URL }}/${{ env.REPOSITORY_NAME }}:${{ env.VERSION }}-b$BUILD_NUMBER"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Azure Login
        run: |
          echo "Login to Azure..."
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ env.REGISTRY_NAME }}

      - name: Build and Push Docker Image
        run: |
          echo "Building and pushing Docker image: $IMAGE_TAG"
          docker build . -t $IMAGE_TAG
          docker push $IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        run: |
          echo "Login to Azure..."
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy Docker Image to Azure Web App
        run: |
          az webapp config container set \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --docker-custom-image-name ${{ needs.build.outputs.image_tag }} \
            --docker-registry-server-url https://${{ env.REGISTRY_URL }} \
            --docker-registry-server-user ${{ secrets.AZURE_CLIENT_ID }} \
            --docker-registry-server-password ${{ secrets.AZURE_CLIENT_SECRET }}
